@using Fatec.Application.ViewModels;
@using Fatec.CrossCutting.Models.PaginacaoHelper
@using PagedList
@using PagedList.Mvc
@model VagasFiltroViewModel<VagaEmpregoViewModel>
@{
    ViewBag.Title = "Vagas Emprego";
}

<br />
<h3 class="center">Vagas de Emprego</h3>
<br />
@using (Html.BeginForm("Index", "VagasEmprego", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="input-field col s12 m5 l5 xl5 center">
            <i class="material-icons prefix">search</i>
            @Html.TextBoxFor(m => m.PesquisaTitulo, new { @class = "form-control" })
            @Html.LabelFor(m => m.PesquisaTitulo, new { @class = "validate" })
        </div>
        <div class="input-field col s12 m5 l5 xl5 center">
            @Html.ListBoxFor(m => m.Tags, new SelectList(ViewBag.Tags, "Id", "Nome", "Selecione"), new { @class = "form-control", multiple = "multiple" })
            @Html.LabelFor(m => m.Tags, new { @class = "validate" })
        </div>
        <div class="row">
            <div class="col s12 m2 l2 xl2 center">
                <input type="submit" value="Pesquisar" class="btn teal-2 waves-light" />
            </div>
        </div>
    </div>
}

<br />

<div class="row">
    @if (Model?.Objeto?.Resultados != null)
    {
        foreach (var item in Model.Objeto.Resultados)
        {
            <div class="col s12 m6 l6 xl4">
                <div class="card hoverable">
                    <div class="card-image">
                        <img class="materialboxed" src="http://fatecjd.edu.br/intranetAlunos/wp-content/uploads/2019/08/Cartaz-181449.pdf-Gam-768x1086.jpg" alt="Banner Vaga">
                    </div>
                    <div class="card-content">
                        <span class="card-title activator grey-text text-darken-4">@item.Titulo<i class="material-icons right">more_vert</i></span>
                        <p>Contato: <a href="#">@item.Email</a></p>
                    </div>
                    <div class="card-reveal hoverable">
                        <span class="card-title grey-text text-darken-4">@item.Titulo<i class="material-icons right">close</i></span>
                        <p>@item.Descricao</p>
                    </div>
                    <div class="card-action">
                        <a href="#">@item.UrlSite</a>
                        <a href="#" onclick="abrirLinkMenu('@Url.Action($"Detalhes/{item.Id}", "VagasEmprego")')">Mais Detalhes..</a>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="center">
            <h4>Nenhuma vaga de emprego disponível no momento</h4>
        </div>
    }
</div>

<br />

@if (ViewBag.PagedList != null)
{
    <div class="row">
        @Html.PagedListPager((IPagedList<VagaEmpregoViewModel>
        )ViewBag.PagedList, page => Url.Action("Paginacao", new VagasFiltroViewModel<VagaEmpregoViewModel>
        {
            Objeto = new ResultadoPaginacao<VagaEmpregoViewModel>(Model.Objeto.Resultados, 0, page, Model.Objeto.TotalPorPagina),
            Tags = Model.Tags,
            PesquisaTitulo = Model.PesquisaTitulo

        }), new PagedListRenderOptions
        {
            ContainerDivClasses = new[] { "col s12 m12 offset-l9 l3 offset-xl9 xl3 center" },
            UlElementClasses = new[] { "pagination" },
            LiElementClasses = new[] { "waves-effect" },
            ClassToApplyToFirstListItemInPager = null,
            ClassToApplyToLastListItemInPager = null,
            DisplayLinkToFirstPage = PagedListDisplayMode.Never,
            DisplayLinkToLastPage = PagedListDisplayMode.Never,
            DisplayEllipsesWhenNotShowingAllPageNumbers = false,
            LinkToPreviousPageFormat = "Anterior",
            LinkToNextPageFormat = "Próximo"
        })
    </div>
}

<script type="text/javascript">
    document.addEventListener('DOMContentLoaded', function () {
        const elems = document.querySelectorAll('.materialboxed');
        const options = {};

        M.Materialbox.init(elems, options);
    });

    document.addEventListener('DOMContentLoaded', function () {
        const elems = document.querySelectorAll('select');
        const options = {};
        M.FormSelect.init(elems, options);
    });
</script>
